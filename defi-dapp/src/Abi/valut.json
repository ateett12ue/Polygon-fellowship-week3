{
  "contractName": "Vault",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StableCoinToken",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract PriceConsumer",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDeposited",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountMinted",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralWithdrawn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBurned",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract StableCoinToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getEthUSDPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract StableCoinToken\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract PriceConsumer\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBurned\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthUSDPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract StableCoinToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"params\":{\"amountToDeposit\":\"The amount of ether the user sent in the transaction\"}},\"withdraw()\":{\"details\":\"This cannot allow a user to withdraw more than they put in\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Allows a user to deposit ETH collateral in exchange for some amount of stablecoin\"},\"withdraw()\":{\"notice\":\"Allows a user to withdraw up to 100% of the collateral they have on deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/implementations/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/implementations/Erc20Coin.sol\":{\"keccak256\":\"0x78d0c81a3f7a9637c784afe46deba8d17af867af06e2603484a4517896206ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7273c4c08c433465c7cca58b55271d540d2f941f6f97569ab685562754bee493\",\"dweb:/ipfs/QmSPFgAHb5ERJk5bSLXUmqzqsqgSgirt5RMnGAxZkzmCYT\"]},\"project:/contracts/implementations/Oracle.sol\":{\"keccak256\":\"0xb6ce8cb9caa373e00d64045d0bb377ddb052bbde923113ef2217b33c396bca20\",\"urls\":[\"bzz-raw://e91095bb698aa9eb2cd4565f1cefe94bad4a4120e192979ecfedfa0a67f92587\",\"dweb:/ipfs/QmWDTe8eyDH2RUsSQL4mP4LWMtaPa8ury6m6e1n7nBU8xv\"]},\"project:/contracts/implementations/PriceConsumer.sol\":{\"keccak256\":\"0xa900a20b8eb56e433e7cc19638ec22d1f2a65a27948934ab1611c91c33e2d935\",\"urls\":[\"bzz-raw://2c8b53ed9d23057bbf3275c6f12869104478e9afd558657446c3fd86c2151074\",\"dweb:/ipfs/QmcpzGiRgpc2CN2JMkSu7FiTPDonZTn6PauyKQnVGmTTt8\"]},\"project:/contracts/implementations/Vault.sol\":{\"keccak256\":\"0x7e032c18431daf716a73d29a88dab0861a127442fbe6142dbea1ca6feece77b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2064cf570ca2a37faf96ca481619af0112736c999949c05b11745cd5538951\",\"dweb:/ipfs/QmTubnRV8573bvY6XjhJcs2LqYtz3TgBkCZs82NX7Q1hmU\"]},\"project:/contracts/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5f9f36fe9f87cf42e6ef844a0594d1790601377e5d95dd7ab9e8a10a3db34d80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d64bdf8ad55451c9e691f65c6e53a089129d84076b482c75b43720849e58a0f4\",\"dweb:/ipfs/QmQUZvYVNiCgX3RigEnrcD6pg2H2vfZcySuM749kj9oD4c\"]},\"project:/contracts/interfaces/Erc20ICoin.sol\":{\"keccak256\":\"0x71e837d7e5e1e4625fd6483924eb928002a4edf61b2fedc06ee6ac9025d69f56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30ed503d51f872bf90bb36ad015b9bb8d63a9d5191253021693a65da3ebc3316\",\"dweb:/ipfs/QmaPNmEvexjzUETpFTLiF51Zze1dbE8Yg6UhvbsVmZcXac\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x8fd5e1c9c9f9eb1fc37b78ae00954f581148a22544c0093d8b73765bc8ace0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f73dba2c490e4e3cb888b2653ddef8e6a736f682e518643e17e9a1e8cefcf33a\",\"dweb:/ipfs/QmdbunM7USJX2M4rTmiGHtb3zzkhzpxhcTfzQKywYgBxnW\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000bfa38038062000bfa8339818101604052810190620000379190620000ef565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001c0565b600081519050620000d2816200018c565b92915050565b600081519050620000e981620001a6565b92915050565b600080604083850312156200010357600080fd5b60006200011385828601620000d8565b92505060206200012685828601620000c1565b9150509250929050565b60006200013d826200016c565b9050919050565b6000620001518262000130565b9050919050565b6000620001658262000130565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001978162000144565b8114620001a357600080fd5b50565b620001b18162000158565b8114620001bd57600080fd5b50565b610a2a80620001d06000396000f3fe60806040526004361061003f5760003560e01c80633ccfd60b14610044578063b6b55f251461005b578063d84549d714610077578063fc0c546a146100a2575b600080fd5b34801561005057600080fd5b506100596100cd565b005b61007560048036038101906100709190610677565b61030e565b005b34801561008357600080fd5b5061008c610504565b6040516100999190610771565b60405180910390f35b3480156100ae57600080fd5b506100b76105c0565b6040516100c49190610736565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050600061011d610504565b82610128919061081c565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161018792919061070d565b602060405180830381600087803b1580156101a157600080fd5b505af11580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d99190610625565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461022b91906108a7565b92505081905550816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461028391906108a7565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102d0573d6000803e3d6000fd5b507f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8818360405161030292919061078c565b60405180910390a15050565b348114610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790610751565b60405180910390fd5b600061035a610504565b82610365919061084d565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016103c492919061070d565b602060405180830381600087803b1580156103de57600080fd5b505af11580156103f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190610625565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461046891906107c6565b92505081905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546104c091906107c6565b925050819055507fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c5582826040516104f892919061078c565b60405180910390a15050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b15801561056f57600080fd5b505afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a7919061064e565b90506402540be400816105ba919061084d565b91505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506105f5816109af565b92915050565b60008151905061060a816109c6565b92915050565b60008135905061061f816109dd565b92915050565b60006020828403121561063757600080fd5b6000610645848285016105e6565b91505092915050565b60006020828403121561066057600080fd5b600061066e848285016105fb565b91505092915050565b60006020828403121561068957600080fd5b600061069784828501610610565b91505092915050565b6106a9816108db565b82525050565b6106b88161092d565b82525050565b60006106cb6014836107b5565b91507f696e636f72726563742045544820616d6f756e740000000000000000000000006000830152602082019050919050565b61070781610923565b82525050565b600060408201905061072260008301856106a0565b61072f60208301846106fe565b9392505050565b600060208201905061074b60008301846106af565b92915050565b6000602082019050818103600083015261076a816106be565b9050919050565b600060208201905061078660008301846106fe565b92915050565b60006040820190506107a160008301856106fe565b6107ae60208301846106fe565b9392505050565b600082825260208201905092915050565b60006107d182610923565b91506107dc83610923565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561081157610810610951565b5b828201905092915050565b600061082782610923565b915061083283610923565b92508261084257610841610980565b5b828204905092915050565b600061085882610923565b915061086383610923565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561089c5761089b610951565b5b828202905092915050565b60006108b282610923565b91506108bd83610923565b9250828210156108d0576108cf610951565b5b828203905092915050565b60006108e682610903565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109388261093f565b9050919050565b600061094a82610903565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6109b8816108ed565b81146109c357600080fd5b50565b6109cf816108f9565b81146109da57600080fd5b50565b6109e681610923565b81146109f157600080fd5b5056fea2646970667358221220ee24c819e077c946f0393156bf420a133fefd5449f3c63d98236a857c6b98fe764736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80633ccfd60b14610044578063b6b55f251461005b578063d84549d714610077578063fc0c546a146100a2575b600080fd5b34801561005057600080fd5b506100596100cd565b005b61007560048036038101906100709190610677565b61030e565b005b34801561008357600080fd5b5061008c610504565b6040516100999190610771565b60405180910390f35b3480156100ae57600080fd5b506100b76105c0565b6040516100c49190610736565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050600061011d610504565b82610128919061081c565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161018792919061070d565b602060405180830381600087803b1580156101a157600080fd5b505af11580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d99190610625565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461022b91906108a7565b92505081905550816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461028391906108a7565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102d0573d6000803e3d6000fd5b507f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8818360405161030292919061078c565b60405180910390a15050565b348114610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034790610751565b60405180910390fd5b600061035a610504565b82610365919061084d565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016103c492919061070d565b602060405180830381600087803b1580156103de57600080fd5b505af11580156103f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190610625565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461046891906107c6565b92505081905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546104c091906107c6565b925050819055507fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c5582826040516104f892919061078c565b60405180910390a15050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b15801561056f57600080fd5b505afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a7919061064e565b90506402540be400816105ba919061084d565b91505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506105f5816109af565b92915050565b60008151905061060a816109c6565b92915050565b60008135905061061f816109dd565b92915050565b60006020828403121561063757600080fd5b6000610645848285016105e6565b91505092915050565b60006020828403121561066057600080fd5b600061066e848285016105fb565b91505092915050565b60006020828403121561068957600080fd5b600061069784828501610610565b91505092915050565b6106a9816108db565b82525050565b6106b88161092d565b82525050565b60006106cb6014836107b5565b91507f696e636f72726563742045544820616d6f756e740000000000000000000000006000830152602082019050919050565b61070781610923565b82525050565b600060408201905061072260008301856106a0565b61072f60208301846106fe565b9392505050565b600060208201905061074b60008301846106af565b92915050565b6000602082019050818103600083015261076a816106be565b9050919050565b600060208201905061078660008301846106fe565b92915050565b60006040820190506107a160008301856106fe565b6107ae60208301846106fe565b9392505050565b600082825260208201905092915050565b60006107d182610923565b91506107dc83610923565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561081157610810610951565b5b828201905092915050565b600061082782610923565b915061083283610923565b92508261084257610841610980565b5b828204905092915050565b600061085882610923565b915061086383610923565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561089c5761089b610951565b5b828202905092915050565b60006108b282610923565b91506108bd83610923565b9250828210156108d0576108cf610951565b5b828203905092915050565b60006108e682610903565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109388261093f565b9050919050565b600061094a82610903565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6109b8816108ed565b81146109c357600080fd5b50565b6109cf816108f9565b81146109da57600080fd5b50565b6109e681610923565b81146109f157600080fd5b5056fea2646970667358221220ee24c819e077c946f0393156bf420a133fefd5449f3c63d98236a857c6b98fe764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1750:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:101:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "116:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "110:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "180:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PriceConsumer_$881",
                      "nodeType": "YulIdentifier",
                      "src": "132:47:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "132:54:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "132:54:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PriceConsumer_$881_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "69:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "85:5:12",
                "type": ""
              }
            ],
            "src": "7:185:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "284:103:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "294:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "309:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "303:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "294:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "375:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_StableCoinToken_$800",
                      "nodeType": "YulIdentifier",
                      "src": "325:49:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "325:56:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "325:56:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_StableCoinToken_$800_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "262:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "270:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "278:5:12",
                "type": ""
              }
            ],
            "src": "198:189:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:390:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "577:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "586:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "589:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "579:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "579:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "579:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "552:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "561:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "548:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "548:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "573:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "544:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "541:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "603:151:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "618:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "622:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "647:97:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "716:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "727:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "712:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "712:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "736:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_StableCoinToken_$800_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "657:54:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "657:87:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "647:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "764:150:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "779:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "793:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "783:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "809:95:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "876:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "887:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "872:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "872:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "896:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PriceConsumer_$881_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "819:52:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:85:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "809:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_StableCoinToken_$800t_contract$_PriceConsumer_$881_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "493:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "504:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "516:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "524:6:12",
                "type": ""
              }
            ],
            "src": "393:528:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "972:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "982:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1011:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "993:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "993:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "982:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "954:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "964:7:12",
                "type": ""
              }
            ],
            "src": "927:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1095:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1105:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1134:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1116:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1116:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1105:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PriceConsumer_$881",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1077:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1087:7:12",
                "type": ""
              }
            ],
            "src": "1029:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1220:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1230:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1259:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1241:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1230:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_StableCoinToken_$800",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1202:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1212:7:12",
                "type": ""
              }
            ],
            "src": "1152:119:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1322:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1332:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1347:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1354:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1343:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1332:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1304:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1314:7:12",
                "type": ""
              }
            ],
            "src": "1277:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1473:100:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1551:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1560:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1563:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1553:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1553:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1553:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1496:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1542:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PriceConsumer_$881",
                              "nodeType": "YulIdentifier",
                              "src": "1503:38:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1503:45:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1493:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1493:56:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1486:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:64:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1483:2:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PriceConsumer_$881",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1466:5:12",
                "type": ""
              }
            ],
            "src": "1409:164:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1645:102:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1725:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1734:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1737:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1727:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1727:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1727:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1668:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1716:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_StableCoinToken_$800",
                              "nodeType": "YulIdentifier",
                              "src": "1675:40:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1675:47:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1665:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1665:58:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:66:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1655:2:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_StableCoinToken_$800",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1638:5:12",
                "type": ""
              }
            ],
            "src": "1579:168:12"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_PriceConsumer_$881_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PriceConsumer_$881(value)\n    }\n\n    function abi_decode_t_contract$_StableCoinToken_$800_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_StableCoinToken_$800(value)\n    }\n\n    function abi_decode_tuple_t_contract$_StableCoinToken_$800t_contract$_PriceConsumer_$881_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_StableCoinToken_$800_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_PriceConsumer_$881_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_PriceConsumer_$881(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_StableCoinToken_$800(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_PriceConsumer_$881(value) {\n        if iszero(eq(value, cleanup_t_contract$_PriceConsumer_$881(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_StableCoinToken_$800(value) {\n        if iszero(eq(value, cleanup_t_contract$_StableCoinToken_$800(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6428:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:12"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:12",
                "type": ""
              }
            ],
            "src": "7:137:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:79:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "253:25:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:32:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:32:12"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:12",
                "type": ""
              }
            ],
            "src": "150:141:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "349:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "359:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "381:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "368:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "359:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "424:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "397:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "397:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "327:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "335:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "343:5:12",
                "type": ""
              }
            ],
            "src": "297:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "516:204:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "562:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "571:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "574:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "564:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "564:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "564:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "537:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "546:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "533:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "533:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "558:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "526:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "588:125:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "603:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "617:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "607:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "632:71:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "675:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "686:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "671:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "671:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "695:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "642:28:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "642:61:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "632:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "486:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "497:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "509:6:12",
                "type": ""
              }
            ],
            "src": "442:278:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "802:206:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "857:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "860:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "850:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "850:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "850:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "823:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "832:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "844:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "815:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "812:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "874:127:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "889:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "893:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "918:73:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "963:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "974:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "959:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "959:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "983:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "928:30:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:63:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "918:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "772:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "783:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "795:6:12",
                "type": ""
              }
            ],
            "src": "726:282:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1080:196:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1126:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1135:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1138:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1128:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1128:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1128:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1101:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1110:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1097:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1097:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1093:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1093:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1090:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1152:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1167:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1171:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1196:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1231:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1242:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1227:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1227:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1251:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1206:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1206:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1196:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1050:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1061:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1073:6:12",
                "type": ""
              }
            ],
            "src": "1014:262:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1347:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1364:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1387:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1369:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1369:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1357:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1357:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1357:37:12"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1335:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1342:3:12",
                "type": ""
              }
            ],
            "src": "1282:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1494:89:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1511:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1570:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_StableCoinToken_$800_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1516:53:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1516:60:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1504:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:73:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1504:73:12"
                }
              ]
            },
            "name": "abi_encode_t_contract$_StableCoinToken_$800_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1482:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1489:3:12",
                "type": ""
              }
            ],
            "src": "1406:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1735:172:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1745:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1811:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1816:2:12",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1752:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1745:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1840:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1845:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1836:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:11:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1849:22:12",
                        "type": "",
                        "value": "incorrect ETH amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1829:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1829:43:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1882:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1893:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1889:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1889:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1723:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1731:3:12",
                "type": ""
              }
            ],
            "src": "1589:318:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1978:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1995:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2018:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2000:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2000:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1988:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1988:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1988:37:12"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1966:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1973:3:12",
                "type": ""
              }
            ],
            "src": "1913:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2163:206:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2173:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2185:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2196:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2181:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2173:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2253:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2266:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2277:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2262:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2262:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2209:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2209:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2334:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2347:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2358:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2343:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2343:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2290:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2290:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2290:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2127:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2139:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2147:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2158:4:12",
                "type": ""
              }
            ],
            "src": "2037:332:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2496:147:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2506:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2518:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2529:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2514:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2514:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2506:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2609:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2622:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2633:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2618:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2618:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_StableCoinToken_$800_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2542:66:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:94:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:94:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_StableCoinToken_$800__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2468:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2480:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2491:4:12",
                "type": ""
              }
            ],
            "src": "2375:268:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2820:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2830:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2842:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2853:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2838:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2838:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2830:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2877:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2888:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2873:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2873:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2896:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2902:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2892:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2892:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2866:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2866:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3056:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2930:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2930:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2922:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2800:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2815:4:12",
                "type": ""
              }
            ],
            "src": "2649:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3172:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3182:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3194:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3205:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3190:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3182:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3262:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3275:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3286:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3271:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3271:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3218:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3218:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3218:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3144:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3156:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3167:4:12",
                "type": ""
              }
            ],
            "src": "3074:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3428:206:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3438:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3450:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3461:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3446:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3446:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3438:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3518:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3531:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3542:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3527:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3527:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3474:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3474:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3474:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3599:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3612:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3623:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3608:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3608:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3555:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3555:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3555:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3392:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3404:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3412:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3423:4:12",
                "type": ""
              }
            ],
            "src": "3302:332:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3736:73:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3753:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3758:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3746:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3746:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3746:19:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3774:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3793:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3798:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3789:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:14:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3774:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3708:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3713:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3724:11:12",
                "type": ""
              }
            ],
            "src": "3640:169:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3859:261:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3869:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3892:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3874:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3874:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3869:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3903:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3926:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3908:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3908:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3903:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4066:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4068:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4068:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4068:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3987:1:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3994:66:12",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4062:1:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3990:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3990:74:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3984:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3984:81:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3981:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4098:16:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4109:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4112:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4105:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4105:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4098:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3846:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3849:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3855:3:12",
                "type": ""
              }
            ],
            "src": "3815:305:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4168:143:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4178:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4201:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4183:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4183:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4178:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4212:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4235:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4217:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4217:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4212:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4259:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "4261:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4261:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4261:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4256:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4249:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4249:9:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4246:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4291:14:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4300:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4303:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4296:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4296:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4291:1:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4157:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4160:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "4166:1:12",
                "type": ""
              }
            ],
            "src": "4126:185:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4365:300:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4375:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4398:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4380:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4380:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4375:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4409:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4432:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4414:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4414:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4409:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4607:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4609:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4609:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4609:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4519:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4512:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4512:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4505:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4505:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4527:1:12"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4534:66:12",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4602:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "4530:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4530:74:12"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4524:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4524:81:12"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4501:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4501:105:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4498:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4639:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4654:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4657:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "4650:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4650:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "4639:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4348:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4351:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "4357:7:12",
                "type": ""
              }
            ],
            "src": "4317:348:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4716:146:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4726:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4749:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4731:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4731:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4726:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4760:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4783:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4765:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4765:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4760:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4807:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4809:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4809:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4809:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4801:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4804:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4798:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4798:8:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4795:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4839:17:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4851:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4854:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4847:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4847:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4839:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4702:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4705:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4711:4:12",
                "type": ""
              }
            ],
            "src": "4671:191:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4913:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4923:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4952:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4934:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4934:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4923:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4895:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4905:7:12",
                "type": ""
              }
            ],
            "src": "4868:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5012:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5022:32:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5047:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5040:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5040:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5033:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5033:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5022:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4994:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5004:7:12",
                "type": ""
              }
            ],
            "src": "4970:90:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5110:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5120:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5131:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5120:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5092:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5102:7:12",
                "type": ""
              }
            ],
            "src": "5066:76:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5193:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5203:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5218:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5225:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5214:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5214:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5203:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5175:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5185:7:12",
                "type": ""
              }
            ],
            "src": "5148:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5325:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5335:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5346:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5335:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5307:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5317:7:12",
                "type": ""
              }
            ],
            "src": "5280:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5446:89:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5456:73:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5523:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_StableCoinToken_$800_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5469:53:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5469:60:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5456:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_StableCoinToken_$800_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5426:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5436:9:12",
                "type": ""
              }
            ],
            "src": "5363:172:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5624:53:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5634:37:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5665:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5647:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5647:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5634:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_StableCoinToken_$800_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5604:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5614:9:12",
                "type": ""
              }
            ],
            "src": "5541:136:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5711:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5728:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5731:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5721:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5721:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5721:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5825:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5828:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5818:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5818:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5818:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5849:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5852:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5842:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5842:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5842:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5683:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5897:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5914:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5917:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5907:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5907:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5907:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6011:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6014:4:12",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6004:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6004:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6004:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6035:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6038:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6028:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6028:15:12"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "5869:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6095:76:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6149:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6158:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6161:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6151:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6151:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6151:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6118:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6140:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6125:14:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6125:21:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6115:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6115:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6108:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6108:40:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6105:2:12"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6088:5:12",
                "type": ""
              }
            ],
            "src": "6055:116:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6219:78:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6275:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6284:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6287:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6277:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6277:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6277:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6242:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6266:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "6249:16:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6249:23:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6239:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6239:34:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6232:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6232:42:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6229:2:12"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6212:5:12",
                "type": ""
              }
            ],
            "src": "6177:120:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6346:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6403:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6412:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6415:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6405:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6405:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6405:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6369:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6394:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6376:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6376:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6366:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6366:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6359:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6359:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6356:2:12"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6339:5:12",
                "type": ""
              }
            ],
            "src": "6303:122:12"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_StableCoinToken_$800_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_StableCoinToken_$800_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"incorrect ETH amount\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_StableCoinToken_$800__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_StableCoinToken_$800_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_StableCoinToken_$800_to_t_address(value) -> converted {\n        converted := convert_t_contract$_StableCoinToken_$800_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_StableCoinToken_$800_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "172:1683:8:-:0;;;311:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;387:6;379:5;;:14;;;;;;;;;;;;;;;;;;412:7;403:6;;:16;;;;;;;;;;;;;;;;;;311:115;;172:1683;;7:185:12;;116:6;110:13;101:22;;132:54;180:5;132:54;:::i;:::-;91:101;;;;:::o;198:189::-;;309:6;303:13;294:22;;325:56;375:5;325:56;:::i;:::-;284:103;;;;:::o;393:528::-;;;573:2;561:9;552:7;548:23;544:32;541:2;;;589:1;586;579:12;541:2;632:1;657:87;736:7;727:6;716:9;712:22;657:87;:::i;:::-;647:97;;603:151;793:2;819:85;896:7;887:6;876:9;872:22;819:85;:::i;:::-;809:95;;764:150;531:390;;;;;:::o;927:96::-;;993:24;1011:5;993:24;:::i;:::-;982:35;;972:51;;;:::o;1029:117::-;;1116:24;1134:5;1116:24;:::i;:::-;1105:35;;1095:51;;;:::o;1152:119::-;;1241:24;1259:5;1241:24;:::i;:::-;1230:35;;1220:51;;;:::o;1277:126::-;;1354:42;1347:5;1343:54;1332:65;;1322:81;;;:::o;1409:164::-;1503:45;1542:5;1503:45;:::i;:::-;1496:5;1493:56;1483:2;;1563:1;1560;1553:12;1483:2;1473:100;:::o;1579:168::-;1675:47;1716:5;1675:47;:::i;:::-;1668:5;1665:58;1655:2;;1737:1;1734;1727:12;1655:2;1645:102;:::o;172:1683:8:-;;;;;;;",
  "deployedSourceMap": "172:1683:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1386:467;;;;;;;;;;;;;:::i;:::-;;776:431;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;432:147;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;242:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1386:467;1434:23;1460:6;:18;1467:10;1460:18;;;;;;;;;;;;;;;:29;;;1434:55;;1499:24;1544:16;:14;:16::i;:::-;1526:15;:34;;;;:::i;:::-;1499:61;;1570:5;;;;;;;;;;;:10;;;1581;1593:15;1570:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1658:16;1619:6;:18;1626:10;1619:18;;;;;;;;;;;;;;;:35;;;:55;;;;;;;:::i;:::-;;;;;;;;1717:15;1684:6;:18;1691:10;1684:18;;;;;;;;;;;;;;;:29;;;:48;;;;;;;:::i;:::-;;;;;;;;1750:10;1742:28;;:46;1771:16;1742:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:43;1812:16;1830:15;1803:43;;;;;;;:::i;:::-;;;;;;;;1386:467;;:::o;776:431::-;881:9;862:15;:28;854:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;925:20;966:16;:14;:16::i;:::-;948:15;:34;;;;:::i;:::-;925:57;;992:5;;;;;;;;;;;:10;;;1003;1015:12;992:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1077:15;1038:6;:18;1045:10;1038:18;;;;;;;;;;;;;;;:35;;;:54;;;;;;;:::i;:::-;;;;;;;;1135:12;1102:6;:18;1109:10;1102:18;;;;;;;;;;;;;;;:29;;;:45;;;;;;;:::i;:::-;;;;;;;;1162:38;1170:15;1187:12;1162:38;;;;;;;:::i;:::-;;;;;;;;776:431;;:::o;432:147::-;479:7;497:11;516:6;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;497:43;;565:6;557;:15;;;;:::i;:::-;550:22;;;432:147;:::o;242:28::-;;;;;;;;;;;;;:::o;7:137:12:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:141::-;;237:6;231:13;222:22;;253:32;279:5;253:32;:::i;:::-;212:79;;;;:::o;297:139::-;;381:6;368:20;359:29;;397:33;424:5;397:33;:::i;:::-;349:87;;;;:::o;442:278::-;;558:2;546:9;537:7;533:23;529:32;526:2;;;574:1;571;564:12;526:2;617:1;642:61;695:7;686:6;675:9;671:22;642:61;:::i;:::-;632:71;;588:125;516:204;;;;:::o;726:282::-;;844:2;832:9;823:7;819:23;815:32;812:2;;;860:1;857;850:12;812:2;903:1;928:63;983:7;974:6;963:9;959:22;928:63;:::i;:::-;918:73;;874:127;802:206;;;;:::o;1014:262::-;;1122:2;1110:9;1101:7;1097:23;1093:32;1090:2;;;1138:1;1135;1128:12;1090:2;1181:1;1206:53;1251:7;1242:6;1231:9;1227:22;1206:53;:::i;:::-;1196:63;;1152:117;1080:196;;;;:::o;1282:118::-;1369:24;1387:5;1369:24;:::i;:::-;1364:3;1357:37;1347:53;;:::o;1406:177::-;1516:60;1570:5;1516:60;:::i;:::-;1511:3;1504:73;1494:89;;:::o;1589:318::-;;1752:67;1816:2;1811:3;1752:67;:::i;:::-;1745:74;;1849:22;1845:1;1840:3;1836:11;1829:43;1898:2;1893:3;1889:12;1882:19;;1735:172;;;:::o;1913:118::-;2000:24;2018:5;2000:24;:::i;:::-;1995:3;1988:37;1978:53;;:::o;2037:332::-;;2196:2;2185:9;2181:18;2173:26;;2209:71;2277:1;2266:9;2262:17;2253:6;2209:71;:::i;:::-;2290:72;2358:2;2347:9;2343:18;2334:6;2290:72;:::i;:::-;2163:206;;;;;:::o;2375:268::-;;2529:2;2518:9;2514:18;2506:26;;2542:94;2633:1;2622:9;2618:17;2609:6;2542:94;:::i;:::-;2496:147;;;;:::o;2649:419::-;;2853:2;2842:9;2838:18;2830:26;;2902:9;2896:4;2892:20;2888:1;2877:9;2873:17;2866:47;2930:131;3056:4;2930:131;:::i;:::-;2922:139;;2820:248;;;:::o;3074:222::-;;3205:2;3194:9;3190:18;3182:26;;3218:71;3286:1;3275:9;3271:17;3262:6;3218:71;:::i;:::-;3172:124;;;;:::o;3302:332::-;;3461:2;3450:9;3446:18;3438:26;;3474:71;3542:1;3531:9;3527:17;3518:6;3474:71;:::i;:::-;3555:72;3623:2;3612:9;3608:18;3599:6;3555:72;:::i;:::-;3428:206;;;;;:::o;3640:169::-;;3758:6;3753:3;3746:19;3798:4;3793:3;3789:14;3774:29;;3736:73;;;;:::o;3815:305::-;;3874:20;3892:1;3874:20;:::i;:::-;3869:25;;3908:20;3926:1;3908:20;:::i;:::-;3903:25;;4062:1;3994:66;3990:74;3987:1;3984:81;3981:2;;;4068:18;;:::i;:::-;3981:2;4112:1;4109;4105:9;4098:16;;3859:261;;;;:::o;4126:185::-;;4183:20;4201:1;4183:20;:::i;:::-;4178:25;;4217:20;4235:1;4217:20;:::i;:::-;4212:25;;4256:1;4246:2;;4261:18;;:::i;:::-;4246:2;4303:1;4300;4296:9;4291:14;;4168:143;;;;:::o;4317:348::-;;4380:20;4398:1;4380:20;:::i;:::-;4375:25;;4414:20;4432:1;4414:20;:::i;:::-;4409:25;;4602:1;4534:66;4530:74;4527:1;4524:81;4519:1;4512:9;4505:17;4501:105;4498:2;;;4609:18;;:::i;:::-;4498:2;4657:1;4654;4650:9;4639:20;;4365:300;;;;:::o;4671:191::-;;4731:20;4749:1;4731:20;:::i;:::-;4726:25;;4765:20;4783:1;4765:20;:::i;:::-;4760:25;;4804:1;4801;4798:8;4795:2;;;4809:18;;:::i;:::-;4795:2;4854:1;4851;4847:9;4839:17;;4716:146;;;;:::o;4868:96::-;;4934:24;4952:5;4934:24;:::i;:::-;4923:35;;4913:51;;;:::o;4970:90::-;;5047:5;5040:13;5033:21;5022:32;;5012:48;;;:::o;5066:76::-;;5131:5;5120:16;;5110:32;;;:::o;5148:126::-;;5225:42;5218:5;5214:54;5203:65;;5193:81;;;:::o;5280:77::-;;5346:5;5335:16;;5325:32;;;:::o;5363:172::-;;5469:60;5523:5;5469:60;:::i;:::-;5456:73;;5446:89;;;:::o;5541:136::-;;5647:24;5665:5;5647:24;:::i;:::-;5634:37;;5624:53;;;:::o;5683:180::-;5731:77;5728:1;5721:88;5828:4;5825:1;5818:15;5852:4;5849:1;5842:15;5869:180;5917:77;5914:1;5907:88;6014:4;6011:1;6004:15;6038:4;6035:1;6028:15;6055:116;6125:21;6140:5;6125:21;:::i;:::-;6118:5;6115:32;6105:2;;6161:1;6158;6151:12;6105:2;6095:76;:::o;6177:120::-;6249:23;6266:5;6249:23;:::i;:::-;6242:5;6239:34;6229:2;;6287:1;6284;6277:12;6229:2;6219:78;:::o;6303:122::-;6376:24;6394:5;6376:24;:::i;:::-;6369:5;6366:35;6356:2;;6415:1;6412;6405:12;6356:2;6346:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IVault.sol\";\nimport \"./Erc20Coin.sol\";\nimport \"./PriceConsumer.sol\";\nimport \"./Oracle.sol\";\n\ncontract Vault is IVault {\n    mapping (address => Vault) vaults;\n    StableCoinToken public token;\n    PriceConsumer private oracle;\n\n    constructor(StableCoinToken _token, PriceConsumer _oracle){\n        token = _token;\n        oracle = _oracle;\n    }\n\n    function getEthUSDPrice() public view returns (uint256){\n        uint price8 = uint(oracle.getLatestPrice());\n        return price8*(10**10);\n    }\n\n    /**\n    @notice Allows a user to deposit ETH collateral in exchange for some amount of stablecoin\n    @param amountToDeposit  The amount of ether the user sent in the transaction\n     */\n    function deposit(uint256 amountToDeposit) override payable external {\n        require(amountToDeposit == msg.value, \"incorrect ETH amount\");\n        uint256 amountToMint = amountToDeposit * getEthUSDPrice();\n        token.mint(msg.sender, amountToMint);\n        vaults[msg.sender].collateralAmount += amountToDeposit;\n        vaults[msg.sender].debtAmount += amountToMint;\n        emit Deposit(amountToDeposit, amountToMint);\n    }\n\n     /**\n    @notice Allows a user to withdraw up to 100% of the collateral they have on deposit\n    @dev This cannot allow a user to withdraw more than they put in\n     */\n    function withdraw() override external {\n        uint256 repaymentAmount = vaults[msg.sender].debtAmount;\n        uint256 amountToWithdraw = repaymentAmount / getEthUSDPrice();\n        token.burn(msg.sender, repaymentAmount);\n        vaults[msg.sender].collateralAmount -= amountToWithdraw;\n        vaults[msg.sender].debtAmount -= repaymentAmount;\n        payable(msg.sender).transfer(amountToWithdraw);\n        emit Withdraw(amountToWithdraw, repaymentAmount);\n    }\n}",
  "sourcePath": "/Users/ateettiwari/Desktop/Blockchain/week3/Contracts/contracts/implementations/Vault.sol",
  "ast": {
    "absolutePath": "project:/contracts/implementations/Vault.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1098
      ],
      "Context": [
        710
      ],
      "ERC20": [
        585
      ],
      "ICoin": [
        1121
      ],
      "IERC20": [
        663
      ],
      "IERC20Metadata": [
        688
      ],
      "IVault": [
        1151
      ],
      "Oracle": [
        841
      ],
      "PriceConsumer": [
        881
      ],
      "StableCoinToken": [
        800
      ],
      "Vault": [
        1052
      ]
    },
    "id": 1053,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 883,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 884,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 1152,
        "src": "57:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/Erc20Coin.sol",
        "file": "./Erc20Coin.sol",
        "id": 885,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 801,
        "src": "92:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/PriceConsumer.sol",
        "file": "./PriceConsumer.sol",
        "id": 886,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 882,
        "src": "118:29:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/Oracle.sol",
        "file": "./Oracle.sol",
        "id": 887,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 842,
        "src": "148:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 888,
              "name": "IVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1151,
              "src": "190:6:8"
            },
            "id": 889,
            "nodeType": "InheritanceSpecifier",
            "src": "190:6:8"
          }
        ],
        "contractDependencies": [
          1151
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1052,
        "linearizedBaseContracts": [
          1052,
          1151
        ],
        "name": "Vault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "mutability": "mutable",
            "name": "vaults",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "203:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
              "typeString": "mapping(address => struct IVault.Vault)"
            },
            "typeName": {
              "id": 893,
              "keyType": {
                "id": 890,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "212:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "203:26:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                "typeString": "mapping(address => struct IVault.Vault)"
              },
              "valueType": {
                "id": 892,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 891,
                  "name": "Vault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1128,
                  "src": "223:5:8"
                },
                "referencedDeclaration": 1128,
                "src": "223:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$1128_storage_ptr",
                  "typeString": "struct IVault.Vault"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 897,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "242:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StableCoinToken_$800",
              "typeString": "contract StableCoinToken"
            },
            "typeName": {
              "id": 896,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 895,
                "name": "StableCoinToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 800,
                "src": "242:15:8"
              },
              "referencedDeclaration": 800,
              "src": "242:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StableCoinToken_$800",
                "typeString": "contract StableCoinToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 900,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "276:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceConsumer_$881",
              "typeString": "contract PriceConsumer"
            },
            "typeName": {
              "id": 899,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 898,
                "name": "PriceConsumer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 881,
                "src": "276:13:8"
              },
              "referencedDeclaration": 881,
              "src": "276:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumer_$881",
                "typeString": "contract PriceConsumer"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "369:57:8",
              "statements": [
                {
                  "expression": {
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 909,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "379:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StableCoinToken_$800",
                        "typeString": "contract StableCoinToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 910,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "387:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StableCoinToken_$800",
                        "typeString": "contract StableCoinToken"
                      }
                    },
                    "src": "379:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StableCoinToken_$800",
                      "typeString": "contract StableCoinToken"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "379:14:8"
                },
                {
                  "expression": {
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 913,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "403:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$881",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 914,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "412:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$881",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "src": "403:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumer_$881",
                      "typeString": "contract PriceConsumer"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "403:16:8"
                }
              ]
            },
            "id": 918,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "323:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StableCoinToken_$800",
                    "typeString": "contract StableCoinToken"
                  },
                  "typeName": {
                    "id": 902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 901,
                      "name": "StableCoinToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 800,
                      "src": "323:15:8"
                    },
                    "referencedDeclaration": 800,
                    "src": "323:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StableCoinToken_$800",
                      "typeString": "contract StableCoinToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "347:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceConsumer_$881",
                    "typeString": "contract PriceConsumer"
                  },
                  "typeName": {
                    "id": 905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 904,
                      "name": "PriceConsumer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 881,
                      "src": "347:13:8"
                    },
                    "referencedDeclaration": 881,
                    "src": "347:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumer_$881",
                      "typeString": "contract PriceConsumer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:47:8"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:8"
            },
            "scope": 1052,
            "src": "311:115:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 939,
              "nodeType": "Block",
              "src": "487:92:8",
              "statements": [
                {
                  "assignments": [
                    924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 924,
                      "mutability": "mutable",
                      "name": "price8",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "497:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 923,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "497:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 931,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 927,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "516:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceConsumer_$881",
                              "typeString": "contract PriceConsumer"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getLatestPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 880,
                          "src": "516:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                            "typeString": "function () view external returns (int256)"
                          }
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "516:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "511:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 925,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "511:4:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "497:43:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 932,
                      "name": "price8",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 924,
                      "src": "557:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "565:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "569:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "565:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        }
                      ],
                      "id": 936,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "564:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "557:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 922,
                  "id": 938,
                  "nodeType": "Return",
                  "src": "550:22:8"
                }
              ]
            },
            "functionSelector": "d84549d7",
            "id": 940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthUSDPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:2:8"
            },
            "returnParameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "479:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "478:9:8"
            },
            "scope": 1052,
            "src": "432:147:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1146
            ],
            "body": {
              "id": 991,
              "nodeType": "Block",
              "src": "844:363:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 948,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "862:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 949,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "881:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "881:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "862:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742045544820616d6f756e74",
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "892:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06",
                          "typeString": "literal_string \"incorrect ETH amount\""
                        },
                        "value": "incorrect ETH amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06",
                          "typeString": "literal_string \"incorrect ETH amount\""
                        }
                      ],
                      "id": 947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "854:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "854:61:8"
                },
                {
                  "assignments": [
                    956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 956,
                      "mutability": "mutable",
                      "name": "amountToMint",
                      "nodeType": "VariableDeclaration",
                      "scope": 991,
                      "src": "925:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "925:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 961,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 957,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "948:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 958,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "966:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "966:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "948:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "925:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1003:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1003:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 967,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "1015:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 962,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "992:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableCoinToken_$800",
                          "typeString": "contract StableCoinToken"
                        }
                      },
                      "id": 964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 781,
                      "src": "992:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "992:36:8"
                },
                {
                  "expression": {
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 970,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1038:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 973,
                        "indexExpression": {
                          "expression": {
                            "id": 971,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1045:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1045:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1038:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1125,
                      "src": "1038:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 975,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "1077:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1038:54:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:54:8"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 978,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1102:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 981,
                        "indexExpression": {
                          "expression": {
                            "id": 979,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1109:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1109:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1102:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1127,
                      "src": "1102:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 983,
                      "name": "amountToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 956,
                      "src": "1135:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1102:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:45:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 987,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "1170:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 988,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "1187:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 986,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "1162:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "EmitStatement",
                  "src": "1157:43:8"
                }
              ]
            },
            "documentation": {
              "id": 941,
              "nodeType": "StructuredDocumentation",
              "src": "585:186:8",
              "text": "@notice Allows a user to deposit ETH collateral in exchange for some amount of stablecoin\n@param amountToDeposit  The amount of ether the user sent in the transaction"
            },
            "functionSelector": "b6b55f25",
            "id": 992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "818:8:8"
            },
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 992,
                  "src": "793:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:25:8"
            },
            "returnParameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:8"
            },
            "scope": 1052,
            "src": "776:431:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1150
            ],
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "1424:429:8",
              "statements": [
                {
                  "assignments": [
                    998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 998,
                      "mutability": "mutable",
                      "name": "repaymentAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "1434:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1434:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1004,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 999,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "1460:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                          "typeString": "mapping(address => struct IVault.Vault storage ref)"
                        }
                      },
                      "id": 1002,
                      "indexExpression": {
                        "expression": {
                          "id": 1000,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1467:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1467:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1460:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$1128_storage",
                        "typeString": "struct IVault.Vault storage ref"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "debtAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1127,
                    "src": "1460:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1434:55:8"
                },
                {
                  "assignments": [
                    1006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1006,
                      "mutability": "mutable",
                      "name": "amountToWithdraw",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "1499:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1005,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1499:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1011,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1007,
                      "name": "repaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "1526:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1008,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "1544:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1544:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1526:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1499:61:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1015,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1581:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1581:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1017,
                        "name": "repaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1593:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1012,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "1570:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableCoinToken_$800",
                          "typeString": "contract StableCoinToken"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 799,
                      "src": "1570:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:39:8"
                },
                {
                  "expression": {
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1020,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1619:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 1023,
                        "indexExpression": {
                          "expression": {
                            "id": 1021,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1626:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1626:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1619:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1125,
                      "src": "1619:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1025,
                      "name": "amountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "1658:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1619:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "1619:55:8"
                },
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1028,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1684:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 1031,
                        "indexExpression": {
                          "expression": {
                            "id": 1029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1691:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1691:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1684:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1127,
                      "src": "1684:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1033,
                      "name": "repaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "1717:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1684:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1042,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "1771:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1038,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1750:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1750:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1742:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1036,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1742:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1742:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1742:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1742:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:46:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1046,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "1812:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1047,
                        "name": "repaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1830:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1045,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1140,
                      "src": "1803:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1049,
                  "nodeType": "EmitStatement",
                  "src": "1798:48:8"
                }
              ]
            },
            "documentation": {
              "id": 993,
              "nodeType": "StructuredDocumentation",
              "src": "1214:167:8",
              "text": "@notice Allows a user to withdraw up to 100% of the collateral they have on deposit\n@dev This cannot allow a user to withdraw more than they put in"
            },
            "functionSelector": "3ccfd60b",
            "id": 1051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1406:8:8"
            },
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1403:2:8"
            },
            "returnParameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:8"
            },
            "scope": 1052,
            "src": "1386:467:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1053,
        "src": "172:1683:8"
      }
    ],
    "src": "32:1823:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/implementations/Vault.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1098
      ],
      "Context": [
        710
      ],
      "ERC20": [
        585
      ],
      "ICoin": [
        1121
      ],
      "IERC20": [
        663
      ],
      "IERC20Metadata": [
        688
      ],
      "IVault": [
        1151
      ],
      "Oracle": [
        841
      ],
      "PriceConsumer": [
        881
      ],
      "StableCoinToken": [
        800
      ],
      "Vault": [
        1052
      ]
    },
    "id": 1053,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 883,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 884,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 1152,
        "src": "57:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/Erc20Coin.sol",
        "file": "./Erc20Coin.sol",
        "id": 885,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 801,
        "src": "92:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/PriceConsumer.sol",
        "file": "./PriceConsumer.sol",
        "id": 886,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 882,
        "src": "118:29:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/Oracle.sol",
        "file": "./Oracle.sol",
        "id": 887,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 842,
        "src": "148:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 888,
              "name": "IVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1151,
              "src": "190:6:8"
            },
            "id": 889,
            "nodeType": "InheritanceSpecifier",
            "src": "190:6:8"
          }
        ],
        "contractDependencies": [
          1151
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1052,
        "linearizedBaseContracts": [
          1052,
          1151
        ],
        "name": "Vault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "mutability": "mutable",
            "name": "vaults",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "203:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
              "typeString": "mapping(address => struct IVault.Vault)"
            },
            "typeName": {
              "id": 893,
              "keyType": {
                "id": 890,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "212:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "203:26:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                "typeString": "mapping(address => struct IVault.Vault)"
              },
              "valueType": {
                "id": 892,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 891,
                  "name": "Vault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1128,
                  "src": "223:5:8"
                },
                "referencedDeclaration": 1128,
                "src": "223:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$1128_storage_ptr",
                  "typeString": "struct IVault.Vault"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 897,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "242:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StableCoinToken_$800",
              "typeString": "contract StableCoinToken"
            },
            "typeName": {
              "id": 896,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 895,
                "name": "StableCoinToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 800,
                "src": "242:15:8"
              },
              "referencedDeclaration": 800,
              "src": "242:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StableCoinToken_$800",
                "typeString": "contract StableCoinToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 900,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "276:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceConsumer_$881",
              "typeString": "contract PriceConsumer"
            },
            "typeName": {
              "id": 899,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 898,
                "name": "PriceConsumer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 881,
                "src": "276:13:8"
              },
              "referencedDeclaration": 881,
              "src": "276:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumer_$881",
                "typeString": "contract PriceConsumer"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "369:57:8",
              "statements": [
                {
                  "expression": {
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 909,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "379:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StableCoinToken_$800",
                        "typeString": "contract StableCoinToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 910,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "387:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StableCoinToken_$800",
                        "typeString": "contract StableCoinToken"
                      }
                    },
                    "src": "379:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StableCoinToken_$800",
                      "typeString": "contract StableCoinToken"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "379:14:8"
                },
                {
                  "expression": {
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 913,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "403:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$881",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 914,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "412:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumer_$881",
                        "typeString": "contract PriceConsumer"
                      }
                    },
                    "src": "403:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumer_$881",
                      "typeString": "contract PriceConsumer"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "403:16:8"
                }
              ]
            },
            "id": 918,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "323:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StableCoinToken_$800",
                    "typeString": "contract StableCoinToken"
                  },
                  "typeName": {
                    "id": 902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 901,
                      "name": "StableCoinToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 800,
                      "src": "323:15:8"
                    },
                    "referencedDeclaration": 800,
                    "src": "323:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StableCoinToken_$800",
                      "typeString": "contract StableCoinToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "347:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceConsumer_$881",
                    "typeString": "contract PriceConsumer"
                  },
                  "typeName": {
                    "id": 905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 904,
                      "name": "PriceConsumer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 881,
                      "src": "347:13:8"
                    },
                    "referencedDeclaration": 881,
                    "src": "347:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumer_$881",
                      "typeString": "contract PriceConsumer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:47:8"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:8"
            },
            "scope": 1052,
            "src": "311:115:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 939,
              "nodeType": "Block",
              "src": "487:92:8",
              "statements": [
                {
                  "assignments": [
                    924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 924,
                      "mutability": "mutable",
                      "name": "price8",
                      "nodeType": "VariableDeclaration",
                      "scope": 939,
                      "src": "497:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 923,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "497:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 931,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 927,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "516:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceConsumer_$881",
                              "typeString": "contract PriceConsumer"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getLatestPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 880,
                          "src": "516:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                            "typeString": "function () view external returns (int256)"
                          }
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "516:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "511:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 925,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "511:4:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "497:43:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 932,
                      "name": "price8",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 924,
                      "src": "557:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "565:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "569:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "565:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        }
                      ],
                      "id": 936,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "564:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "557:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 922,
                  "id": 938,
                  "nodeType": "Return",
                  "src": "550:22:8"
                }
              ]
            },
            "functionSelector": "d84549d7",
            "id": 940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthUSDPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:2:8"
            },
            "returnParameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "479:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "478:9:8"
            },
            "scope": 1052,
            "src": "432:147:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1146
            ],
            "body": {
              "id": 991,
              "nodeType": "Block",
              "src": "844:363:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 948,
                          "name": "amountToDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "862:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 949,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "881:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "881:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "862:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742045544820616d6f756e74",
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "892:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06",
                          "typeString": "literal_string \"incorrect ETH amount\""
                        },
                        "value": "incorrect ETH amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80f50cbce82317c6ba3b0e60ca76210dd3ad8514858f7588ea32dfc54425da06",
                          "typeString": "literal_string \"incorrect ETH amount\""
                        }
                      ],
                      "id": 947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "854:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "854:61:8"
                },
                {
                  "assignments": [
                    956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 956,
                      "mutability": "mutable",
                      "name": "amountToMint",
                      "nodeType": "VariableDeclaration",
                      "scope": 991,
                      "src": "925:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "925:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 961,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 957,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "948:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 958,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "966:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "966:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "948:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "925:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1003:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1003:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 967,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "1015:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 962,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "992:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableCoinToken_$800",
                          "typeString": "contract StableCoinToken"
                        }
                      },
                      "id": 964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 781,
                      "src": "992:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "992:36:8"
                },
                {
                  "expression": {
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 970,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1038:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 973,
                        "indexExpression": {
                          "expression": {
                            "id": 971,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1045:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1045:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1038:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1125,
                      "src": "1038:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 975,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "1077:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1038:54:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:54:8"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 978,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1102:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 981,
                        "indexExpression": {
                          "expression": {
                            "id": 979,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1109:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1109:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1102:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1127,
                      "src": "1102:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 983,
                      "name": "amountToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 956,
                      "src": "1135:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1102:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:45:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 987,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "1170:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 988,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "1187:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 986,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "1162:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "EmitStatement",
                  "src": "1157:43:8"
                }
              ]
            },
            "documentation": {
              "id": 941,
              "nodeType": "StructuredDocumentation",
              "src": "585:186:8",
              "text": "@notice Allows a user to deposit ETH collateral in exchange for some amount of stablecoin\n@param amountToDeposit  The amount of ether the user sent in the transaction"
            },
            "functionSelector": "b6b55f25",
            "id": 992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "818:8:8"
            },
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 992,
                  "src": "793:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:25:8"
            },
            "returnParameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:8"
            },
            "scope": 1052,
            "src": "776:431:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1150
            ],
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "1424:429:8",
              "statements": [
                {
                  "assignments": [
                    998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 998,
                      "mutability": "mutable",
                      "name": "repaymentAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "1434:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1434:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1004,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 999,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "1460:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                          "typeString": "mapping(address => struct IVault.Vault storage ref)"
                        }
                      },
                      "id": 1002,
                      "indexExpression": {
                        "expression": {
                          "id": 1000,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1467:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1467:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1460:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$1128_storage",
                        "typeString": "struct IVault.Vault storage ref"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "debtAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1127,
                    "src": "1460:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1434:55:8"
                },
                {
                  "assignments": [
                    1006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1006,
                      "mutability": "mutable",
                      "name": "amountToWithdraw",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "1499:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1005,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1499:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1011,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1007,
                      "name": "repaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "1526:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1008,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "1544:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1544:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1526:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1499:61:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1015,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1581:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1581:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1017,
                        "name": "repaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1593:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1012,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "1570:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableCoinToken_$800",
                          "typeString": "contract StableCoinToken"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 799,
                      "src": "1570:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:39:8"
                },
                {
                  "expression": {
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1020,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1619:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 1023,
                        "indexExpression": {
                          "expression": {
                            "id": 1021,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1626:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1626:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1619:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1125,
                      "src": "1619:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1025,
                      "name": "amountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "1658:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1619:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "1619:55:8"
                },
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1028,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "1684:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1128_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 1031,
                        "indexExpression": {
                          "expression": {
                            "id": 1029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1691:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1691:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1684:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1128_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1127,
                      "src": "1684:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1033,
                      "name": "repaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "1717:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1684:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1042,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "1771:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1038,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1750:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1750:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1742:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1036,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1742:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1742:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1742:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1742:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:46:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1046,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "1812:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1047,
                        "name": "repaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1830:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1045,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1140,
                      "src": "1803:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1049,
                  "nodeType": "EmitStatement",
                  "src": "1798:48:8"
                }
              ]
            },
            "documentation": {
              "id": 993,
              "nodeType": "StructuredDocumentation",
              "src": "1214:167:8",
              "text": "@notice Allows a user to withdraw up to 100% of the collateral they have on deposit\n@dev This cannot allow a user to withdraw more than they put in"
            },
            "functionSelector": "3ccfd60b",
            "id": 1051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1406:8:8"
            },
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1403:2:8"
            },
            "returnParameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:8"
            },
            "scope": 1052,
            "src": "1386:467:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1053,
        "src": "172:1683:8"
      }
    ],
    "src": "32:1823:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x0d6712258223eeecb587ecC101eCA75277Ea190e",
      "transactionHash": "0x27b00f64b9f66c8a0b7f0c00273a1812678f383415e41ae35e75b1a420b07cd5"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-07-04T12:38:32.551Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256)": {
        "params": {
          "amountToDeposit": "The amount of ether the user sent in the transaction"
        }
      },
      "withdraw()": {
        "details": "This cannot allow a user to withdraw more than they put in"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256)": {
        "notice": "Allows a user to deposit ETH collateral in exchange for some amount of stablecoin"
      },
      "withdraw()": {
        "notice": "Allows a user to withdraw up to 100% of the collateral they have on deposit"
      }
    },
    "version": 1
  }
}